{
  "version": 3,
  "sources": ["../../../../../apps/field_force/field_force/public/js/get_item/multi_select_dialog.js"],
  "sourcesContent": ["frappe.ui.form.MultiSelectDialog = class MultiSelectDialog {\n\tconstructor(opts) {\n\t\t/* Options: doctype, target, setters, get_query, action, add_filters_group, data_fields, primary_action_label, columns */\n\t\tObject.assign(this, opts);\n\t\tthis.for_select = this.doctype == \"[Select]\";\n\t\tif (!this.for_select) {\n\t\t\tfrappe.model.with_doctype(this.doctype, () => this.init());\n\t\t} else {\n\t\t\tthis.init();\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.page_length = 20;\n\t\tthis.child_page_length = 20;\n\t\tthis.fields = this.get_fields();\n\n\t\tthis.make();\n\t}\n\n\tget_fields() {\n\t\tconst primary_fields = this.get_primary_filters();\n\t\tconst result_fields = this.get_result_fields();\n\t\tconst data_fields = this.get_data_fields();\n\t\tconst child_selection_fields = this.get_child_selection_fields();\n\n\t\treturn [...primary_fields, ...result_fields, ...data_fields, ...child_selection_fields];\n\t}\n\n\tget_result_fields() {\n\t\tconst show_next_page = () => {\n\t\t\tthis.page_length += 20;\n\t\t\tthis.get_results();\n\t\t};\n\t\treturn [\n\t\t\t{\n\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\tfieldname: \"results_area\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Button\",\n\t\t\t\tfieldname: \"more_btn\",\n\t\t\t\tlabel: __(\"More\"),\n\t\t\t\tclick: show_next_page.bind(this),\n\t\t\t},\n\t\t];\n\t}\n\n\tget_data_fields() {\n\t\tif (this.data_fields && this.data_fields.length) {\n\t\t\t// Custom Data Fields\n\t\t\treturn [{ fieldtype: \"Section Break\" }, ...this.data_fields];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tget_child_selection_fields() {\n\t\tconst fields = [];\n\t\tif (this.allow_child_item_selection && this.child_fieldname) {\n\t\t\tconst show_more_child_results = () => {\n\t\t\t\tthis.child_page_length += 20;\n\t\t\t\tthis.show_child_results();\n\t\t\t};\n\t\t\tfields.push({ fieldtype: \"HTML\", fieldname: \"child_selection_area\" });\n\t\t\tfields.push({\n\t\t\t\tfieldtype: \"Button\",\n\t\t\t\tfieldname: \"more_child_btn\",\n\t\t\t\thidden: 1,\n\t\t\t\tlabel: __(\"More\"),\n\t\t\t\tclick: show_more_child_results.bind(this),\n\t\t\t});\n\t\t}\n\t\treturn fields;\n\t}\n\n\tmake() {\n\t\tlet doctype_plural = __(this.doctype).plural();\n\t\tlet title = __(\"Select {0}\", [this.for_select ? __(\"value\") : doctype_plural]);\n\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: title,\n\t\t\tfields: this.fields,\n\t\t\tsize: this.size,\n\t\t\tprimary_action_label: this.primary_action_label || __(\"Get Items\"),\n\t\t\tsecondary_action_label: __(\"Make {0}\", [__(this.doctype)]),\n\t\t\tprimary_action: () => {\n\t\t\t\tlet filters_data = this.get_custom_filters();\n\t\t\t\tconst data_values = cur_dialog.get_values(); // to pass values of data fields\n\t\t\t\tconst filtered_children = this.get_selected_child_names();\n\t\t\t\tconst selected_documents = [\n\t\t\t\t\t...this.get_checked_values(),\n\t\t\t\t\t...this.get_parent_name_of_selected_children(),\n\t\t\t\t];\n\t\t\t\tthis.action(selected_documents, {\n\t\t\t\t\t...this.args,\n\t\t\t\t\t...data_values,\n\t\t\t\t\t...filters_data,\n\t\t\t\t\tfiltered_children,\n\t\t\t\t});\n\t\t\t},\n\t\t\tsecondary_action: this.make_new_document.bind(this),\n\t\t});\n\n\t\tif (this.add_filters_group) {\n\t\t\tthis.make_filter_area();\n\t\t}\n\n\t\tthis.args = {};\n\n\t\tthis.setup_results();\n\t\tthis.bind_events();\n\t\tthis.get_results();\n\t\tthis.dialog.show();\n\t}\n\n\tmake_new_document(e) {\n\t\t// If user wants to close the modal\n\t\tif (e) {\n\t\t\tthis.set_route_options();\n\t\t\tfrappe.new_doc(this.doctype, true);\n\t\t}\n\t}\n\n\tset_route_options() {\n\t\t// set route options to get pre-filled form fields\n\t\tfrappe.route_options = {};\n\t\tif (Array.isArray(this.setters)) {\n\t\t\tfor (let df of this.setters) {\n\t\t\t\tfrappe.route_options[df.fieldname] =\n\t\t\t\t\tthis.dialog.fields_dict[df.fieldname].get_value() || undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tObject.keys(this.setters).forEach((setter) => {\n\t\t\t\tfrappe.route_options[setter] =\n\t\t\t\t\tthis.dialog.fields_dict[setter].get_value() || undefined;\n\t\t\t});\n\t\t}\n\t}\n\n\tsetup_results() {\n\t\tthis.$parent = $(this.dialog.body);\n\t\tthis.$wrapper = this.dialog.fields_dict.results_area.$wrapper\n\t\t\t.append(`<div class=\"results my-3\"\n\t\t\tstyle=\"border: 1px solid #d1d8dd; border-radius: 3px; height: 300px; overflow: auto;\"></div>`);\n\n\t\tthis.$results = this.$wrapper.find(\".results\");\n\t\tthis.$results.append(this.make_list_row());\n\t}\n\n\tshow_child_results() {\n\t\tthis.get_child_result().then((r) => {\n\t\t\tthis.child_results = r.message || [];\n\t\t\tthis.render_child_datatable();\n\n\t\t\tthis.$wrapper.addClass(\"hidden\");\n\t\t\tthis.$child_wrapper.removeClass(\"hidden\");\n\t\t\tthis.dialog.fields_dict.more_btn.$wrapper.hide();\n\t\t});\n\t}\n\n\tis_child_selection_enabled() {\n\t\treturn this.dialog.fields_dict[\"allow_child_item_selection\"]?.get_value();\n\t}\n\n\ttoggle_child_selection() {\n\t\tif (this.is_child_selection_enabled()) {\n\t\t\tthis.show_child_results();\n\t\t} else {\n\t\t\tthis.child_results = [];\n\t\t\tthis.get_results();\n\t\t\tthis.$wrapper.removeClass(\"hidden\");\n\t\t\tthis.$child_wrapper.addClass(\"hidden\");\n\t\t}\n\t}\n\n\trender_child_datatable() {\n\t\tif (!this.child_datatable) {\n\t\t\tthis.setup_child_datatable();\n\t\t} else {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.child_datatable.rowmanager.checkMap = [];\n\t\t\t\tthis.child_datatable.refresh(this.get_child_datatable_rows());\n\t\t\t\tthis.$child_wrapper.find(\".dt-scrollable\").css(\"height\", \"300px\");\n\t\t\t\tthis.$child_wrapper.find(\".dt-scrollable\").css(\"overflow-y\", \"scroll\");\n\t\t\t}, 500);\n\t\t}\n\t}\n\n\tget_child_datatable_columns() {\n\t\tconst parent = this.doctype;\n\t\treturn [parent, ...this.child_columns].map((d) => ({\n\t\t\tname: frappe.unscrub(d),\n\t\t\teditable: false,\n\t\t}));\n\t}\n\n\tget_child_datatable_rows() {\n\t\tif (this.child_results.length > this.child_page_length) {\n\t\t\tthis.dialog.fields_dict.more_child_btn.toggle(true);\n\t\t} else {\n\t\t\tthis.dialog.fields_dict.more_child_btn.toggle(false);\n\t\t}\n\t\treturn this.child_results\n\t\t\t.slice(0, this.child_page_length)\n\t\t\t.map((d) => Object.values(d).slice(1)); // slice name field\n\t}\n\n\tsetup_child_datatable() {\n\t\tconst header_columns = this.get_child_datatable_columns();\n\t\tconst rows = this.get_child_datatable_rows();\n\t\tthis.$child_wrapper = this.dialog.fields_dict.child_selection_area.$wrapper;\n\t\tthis.$child_wrapper.addClass(\"my-3\");\n\n\t\tthis.child_datatable = new frappe.DataTable(this.$child_wrapper.get(0), {\n\t\t\tcolumns: header_columns,\n\t\t\tdata: rows,\n\t\t\tlayout: \"fluid\",\n\t\t\tinlineFilters: true,\n\t\t\tserialNoColumn: false,\n\t\t\tcheckboxColumn: true,\n\t\t\tcellHeight: 35,\n\t\t\tnoDataMessage: __(\"No Data\"),\n\t\t\tdisableReorderColumn: true,\n\t\t});\n\t\tthis.$child_wrapper.find(\".dt-scrollable\").css(\"height\", \"300px\");\n\t}\n\n\tget_primary_filters() {\n\t\tlet fields = [];\n\n\t\tlet columns = new Array(3);\n\n\t\t// Hack for three column layout\n\t\t// To add column break\n\t\tcolumns[0] = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: __(\"Name\"),\n\t\t\t\tfieldname: \"search_term\",\n\t\t\t},\n\t\t];\n\t\tcolumns[1] = [];\n\t\tcolumns[2] = [];\n\n\t\tif ($.isArray(this.setters)) {\n\t\t\tthis.setters.forEach((setter, index) => {\n\t\t\t\tcolumns[(index + 1) % 3].push(setter);\n\t\t\t});\n\t\t} else {\n\t\t\tObject.keys(this.setters).forEach((setter, index) => {\n\t\t\t\tlet df_prop = frappe.meta.docfield_map[this.doctype][setter];\n\n\t\t\t\t// Index + 1 to start filling from index 1\n\t\t\t\t// Since Search is a standrd field already pushed\n\t\t\t\tif (df_prop.label === \"Expected Delivery Date (for Ops)\" || df_prop.label === \"Company\") {\n\t\t\t\t\tcolumns[(index + 1) % 3].push({\n\t\t\t\t\t\tfieldtype: df_prop.fieldtype,\n\t\t\t\t\t\tlabel: df_prop.label,\n\t\t\t\t\t\tfieldname: setter,\n\t\t\t\t\t\toptions: df_prop.options,\n\t\t\t\t\t\tdefault: this.setters[setter],\n\t\t\t\t\t\thidden:1\n\t\t\t\t\t});\n\t\t\t\t}else {\n\t\t\t\t\tcolumns[(index + 1) % 3].push({\n\t\t\t\t\t\tfieldtype: df_prop.fieldtype,\n\t\t\t\t\t\tlabel: df_prop.label,\n\t\t\t\t\t\tfieldname: setter,\n\t\t\t\t\t\toptions: df_prop.options,\n\t\t\t\t\t\tdefault: this.setters[setter],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\n\t\tif (Object.seal) {\n\t\t\tObject.seal(columns);\n\t\t\t// now a is a fixed-size array with mutable entries\n\t\t}\n\n\t\tif (this.allow_child_item_selection) {\n\t\t\tthis.child_doctype = frappe.meta.get_docfield(\n\t\t\t\tthis.doctype,\n\t\t\t\tthis.child_fieldname\n\t\t\t).options;\n\t\t\tcolumns[0].push({\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tlabel: __(\"Select {0}\", [this.child_doctype]),\n\t\t\t\tfieldname: \"allow_child_item_selection\",\n\t\t\t\tonchange: this.toggle_child_selection.bind(this),\n\t\t\t});\n\t\t}\n\n\t\tfields = [\n\t\t\t...columns[0],\n\t\t\t{ fieldtype: \"Column Break\" },\n\t\t\t...columns[1],\n\t\t\t{ fieldtype: \"Column Break\" },\n\t\t\t...columns[2],\n\t\t\t{ fieldtype: \"Section Break\", fieldname: \"primary_filters_sb\" },\n\t\t];\n\n\t\tif (this.add_filters_group) {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\tfieldname: \"filter_area\",\n\t\t\t});\n\t\t}\n\n\t\treturn fields;\n\t}\n\n\tmake_filter_area() {\n\t\tthis.filter_group = new frappe.ui.FilterGroup({\n\t\t\tparent: this.dialog.get_field(\"filter_area\").$wrapper,\n\t\t\tdoctype: this.doctype,\n\t\t\ton_change: () => {\n\t\t\t\tif (this.is_child_selection_enabled()) {\n\t\t\t\t\tthis.show_child_results();\n\t\t\t\t} else {\n\t\t\t\t\tthis.get_results();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\t// 'Apply Filter' breaks since the filers are not in a popover\n\t\t// Hence keeping it hidden\n\t\tthis.filter_group.wrapper.find(\".apply-filters\").hide();\n\t}\n\n\tget_custom_filters() {\n\t\tif (this.add_filters_group && this.filter_group) {\n\t\t\treturn this.filter_group.get_filters().reduce((acc, filter) => {\n\t\t\t\treturn Object.assign(acc, {\n\t\t\t\t\t[filter[1]]: [filter[2], filter[3]],\n\t\t\t\t});\n\t\t\t}, {});\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tbind_events() {\n\t\tlet me = this;\n\n\t\tthis.$results.on(\"click\", \".list-item-container\", function (e) {\n\t\t\tif (!$(e.target).is(\":checkbox\") && !$(e.target).is(\"a\")) {\n\t\t\t\t$(this).find(\":checkbox\").trigger(\"click\");\n\t\t\t}\n\t\t});\n\n\t\tthis.$results.on(\"click\", \".list-item--head :checkbox\", (e) => {\n\t\t\tthis.$results\n\t\t\t\t.find(\".list-item-container .list-row-check\")\n\t\t\t\t.prop(\"checked\", $(e.target).is(\":checked\"));\n\t\t});\n\n\t\tthis.$parent.find(\".input-with-feedback\").on(\"change\", () => {\n\t\t\tfrappe.flags.auto_scroll = false;\n\t\t\tif (this.is_child_selection_enabled()) {\n\t\t\t\tthis.show_child_results();\n\t\t\t} else {\n\t\t\t\tthis.get_results();\n\t\t\t}\n\t\t});\n\n\t\tthis.$parent.find('[data-fieldtype=\"Data\"]').on(\"input\", () => {\n\t\t\tvar $this = $(this);\n\t\t\tclearTimeout($this.data(\"timeout\"));\n\t\t\t$this.data(\n\t\t\t\t\"timeout\",\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tfrappe.flags.auto_scroll = false;\n\t\t\t\t\tif (me.is_child_selection_enabled()) {\n\t\t\t\t\t\tme.show_child_results();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.empty_list();\n\t\t\t\t\t\tme.get_results();\n\t\t\t\t\t}\n\t\t\t\t}, 300)\n\t\t\t);\n\t\t});\n\t}\n\n\tget_parent_name_of_selected_children() {\n\t\tif (!this.child_datatable || !this.child_datatable.datamanager.rows.length) return [];\n\n\t\tlet parent_names = this.child_datatable.rowmanager.checkMap.reduce(\n\t\t\t(parent_names, checked, index) => {\n\t\t\t\tif (checked == 1) {\n\t\t\t\t\tconst parent_name = this.child_results[index].parent;\n\t\t\t\t\tif (!parent_names.includes(parent_name)) {\n\t\t\t\t\t\tparent_names.push(parent_name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn parent_names;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\n\t\treturn parent_names;\n\t}\n\n\tget_selected_child_names() {\n\t\tif (!this.child_datatable || !this.child_datatable.datamanager.rows.length) return [];\n\n\t\tlet checked_names = this.child_datatable.rowmanager.checkMap.reduce(\n\t\t\t(checked_names, checked, index) => {\n\t\t\t\tif (checked == 1) {\n\t\t\t\t\tconst child_row_name = this.child_results[index].name;\n\t\t\t\t\tchecked_names.push(child_row_name);\n\t\t\t\t}\n\t\t\t\treturn checked_names;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\n\t\treturn checked_names;\n\t}\n\n\tget_checked_values() {\n\t\t// Return name of checked value.\n\t\treturn this.$results\n\t\t\t.find(\".list-item-container\")\n\t\t\t.map(function () {\n\t\t\t\tif ($(this).find(\".list-row-check:checkbox:checked\").length > 0) {\n\t\t\t\t\treturn $(this).attr(\"data-item-name\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.get();\n\t}\n\n\tget_checked_items() {\n\t\t// Return checked items with all the column values.\n\t\tlet checked_values = this.get_checked_values();\n\t\treturn this.results.filter((res) => checked_values.includes(res.name));\n\t}\n\n\tget_datatable_columns() {\n\t\tif (this.get_query && this.get_query().query && this.columns) return this.columns;\n\n\t\tif (Array.isArray(this.setters))\n\t\t\treturn [\"name\", ...this.setters.map((df) => df.fieldname)];\n\n\t\treturn [\"name\", ...Object.keys(this.setters)];\n\t}\n\n\tmake_list_row(result = {}) {\n\t\tvar me = this;\n\t\t// Make a head row by default (if result not passed)\n\t\tlet head = Object.keys(result).length === 0;\n\n\t\tlet contents = ``;\n\t\tthis.get_datatable_columns().forEach(function (column) {\n\t\t\tif (column === \"customer\" || column === \"expected_delivery_date\" || column === \"name\") {\n\n                if (column === \"customer\" ) {\n\n                    contents += `<div class=\"list-item__content ellipsis\">\n                        ${\n                            head\n                                ? `<span class=\"ellipsis text-muted\" title=\"${__(frappe.model.unscrub(column))}\">${__(frappe.model.unscrub(column))}</span>`\n                                : `<a href=\"${\"/app/\" + \"customer\" + \"/\" + result[column] || \"\"}\" class=\"list-id ellipsis\" title=\"${__(result[column] || \"\")}\">\n                                    ${__(result[column] || \"\")}</a>`\n                        }\n                    </div>`;\n                }\n                else if (column === \"expected_delivery_date\" && result[column]) {\n                    \n                    contents += `<div class=\"list-item__content ellipsis\">\n                        ${\n                            head\n                                ? `<span class=\"ellipsis text-muted\" title=\"${__(frappe.model.unscrub(column))}\">${__(frappe.model.unscrub(column))}</span>`\n                                : `<span class=\"ellipsis result-row\" title=\"${__(result[column] || \"\")}\">${__(moment(result[column]).format(\"DD-MM-YYYY\") || \"\")}</span>`\n                        }\n                    </div>`;\n                }else {\n\n                    contents += `<div class=\"list-item__content ellipsis\">\n                        ${\n                            head\n                                ? `<span class=\"ellipsis text-muted\" title=\"${__(frappe.model.unscrub(column))}\">${__(frappe.model.unscrub(column))}</span>`: column !== \"name\"\n                                ? `<span class=\"ellipsis result-row\" title=\"${__(result[column] || \"\")}\">${__(result[column] || \"\")}</span>`\n                                : `<a href=\"${\"/app/\" + frappe.router.slug(me.doctype) + \"/\" + result[column] || \"\"}\" class=\"list-id ellipsis\" title=\"${__(result[column] || \"\")}\">\n                                    ${__(result[column] || \"\")}</a>`\n                        }\n                    </div>`;\n                }\n\t\t\t}\n\t\t});\n\n\t\tlet $row = $(`<div class=\"list-item\">\n\t\t\t<div class=\"list-item__content\" style=\"flex: 0 0 10px;\">\n\t\t\t\t<input type=\"checkbox\" class=\"list-row-check\" data-item-name=\"${result.name}\" ${\n\t\t\tresult.checked ? \"checked\" : \"\"\n\t\t}>\n\t\t\t</div>\n\t\t\t${contents}\n\t\t</div>`);\n\t\thead\n\t\t\t? $row.addClass(\"list-item--head\")\n\t\t\t: ($row = $(\n\t\t\t\t\t`<div class=\"list-item-container\" data-item-name=\"${result.name}\"></div>`\n\t\t\t  ).append($row));\n\n\t\treturn $row;\n\t}\n\n\trender_result_list(results, more = 0, empty = true) {\n\t\tvar me = this;\n\t\tvar more_btn = me.dialog.fields_dict.more_btn.$wrapper;\n\n\t\t// Make empty result set if filter is set\n\t\tif (!frappe.flags.auto_scroll && empty) {\n\t\t\tthis.empty_list();\n\t\t}\n\t\tmore_btn.hide();\n\t\t$(\".modal-dialog .list-item--head\").css(\"z-index\", 1);\n\n\t\tif (results.length === 0) return;\n\t\tif (more) more_btn.show();\n\n\t\tlet checked = this.get_checked_values();\n\n\t\tresults\n\t\t\t.filter((result) => !checked.includes(result.name))\n\t\t\t.forEach((result) => {\n\t\t\t\tme.$results.append(me.make_list_row(result));\n\t\t\t});\n\n\t\tthis.$results.find(\".list-item--head\").css(\"z-index\", 1);\n\n\t\tif (frappe.flags.auto_scroll) {\n\t\t\tthis.$results.animate({ scrollTop: me.$results.prop(\"scrollHeight\") }, 500);\n\t\t}\n\t}\n\n\tempty_list() {\n\t\t// Store all checked items\n\t\tlet checked = this.get_checked_items().map((item) => {\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\tchecked: true,\n\t\t\t};\n\t\t});\n\n\t\t// Remove **all** items\n\t\tthis.$results.find(\".list-item-container\").remove();\n\n\t\t// Rerender checked items\n\t\tthis.render_result_list(checked, 0, false);\n\t}\n\n\tget_filters_from_setters() {\n\t\tlet me = this;\n\t\tlet filters = (this.get_query ? this.get_query().filters : {}) || {};\n\t\tlet filter_fields = [];\n\n\t\tif ($.isArray(this.setters)) {\n\t\t\tfor (let df of this.setters) {\n\t\t\t\tfilters[df.fieldname] =\n\t\t\t\t\tme.dialog.fields_dict[df.fieldname].get_value() || undefined;\n\t\t\t\tme.args[df.fieldname] = filters[df.fieldname];\n\t\t\t\tfilter_fields.push(df.fieldname);\n\t\t\t}\n\t\t} else {\n\t\t\tObject.keys(this.setters).forEach(function (setter) {\n\t\t\t\tvar value = me.dialog.fields_dict[setter].get_value();\n\t\t\t\tif (me.dialog.fields_dict[setter].df.fieldtype == \"Data\" && value) {\n\t\t\t\t\tfilters[setter] = [\"like\", \"%\" + value + \"%\"];\n\t\t\t\t} else {\n\t\t\t\t\tfilters[setter] = value || undefined;\n\t\t\t\t\tme.args[setter] = filters[setter];\n\t\t\t\t\tfilter_fields.push(setter);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn [filters, filter_fields];\n\t}\n\n\tget_args_for_search() {\n\t\tlet [filters, filter_fields] = this.get_filters_from_setters();\n\n\t\tlet custom_filters = this.get_custom_filters();\n\t\tObject.assign(filters, custom_filters);\n\n\t\treturn {\n\t\t\tdoctype: this.doctype,\n\t\t\ttxt: this.dialog.fields_dict[\"search_term\"].get_value(),\n\t\t\tfilters: filters,\n\t\t\tfilter_fields: filter_fields,\n\t\t\tpage_length: this.page_length + 5,\n\t\t\tquery: this.get_query ? this.get_query().query : \"\",\n\t\t\tas_dict: 1,\n\t\t};\n\t}\n\n\tasync perform_search(args) {\n\t\tconst res = await frappe.call({\n\t\t\ttype: \"GET\",\n\t\t\tmethod: \"frappe.desk.search.search_widget\",\n\t\t\tno_spinner: true,\n\t\t\targs: args,\n\t\t});\n\t\tconst more = res.values.length && res.values.length > this.page_length ? 1 : 0;\n\n\t\treturn [res, more];\n\t}\n\n\tasync get_results() {\n\t\tconst args = this.get_args_for_search();\n\t\tconst [res, more] = await this.perform_search(args);\n\n\t\tif (more) {\n\t\t\tres.values = res.values.splice(0, this.page_length);\n\t\t}\n\n\t\tthis.results = [];\n\t\tif (res.values.length) {\n\t\t\tres.values.forEach((result) => {\n\t\t\t\tresult.checked = 0;\n\t\t\t\tthis.results.push(result);\n\t\t\t});\n\t\t}\n\t\tthis.render_result_list(this.results, more);\n\t}\n\n\tasync get_filtered_parents_for_child_search() {\n\t\tconst parent_search_args = this.get_args_for_search();\n\t\tparent_search_args.filter_fields = [\"name\"];\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tconst [response, _] = await this.perform_search(parent_search_args);\n\n\t\tlet parent_names = [];\n\t\tif (response.values.length) {\n\t\t\tparent_names = response.values.map((v) => v.name);\n\t\t}\n\t\treturn parent_names;\n\t}\n\n\tasync add_parent_filters(filters) {\n\t\tconst parent_names = await this.get_filtered_parents_for_child_search();\n\t\tif (parent_names.length) {\n\t\t\tfilters.push([\"parent\", \"in\", parent_names]);\n\t\t}\n\t}\n\n\tadd_custom_child_filters(filters) {\n\t\tif (this.add_filters_group && this.filter_group) {\n\t\t\tthis.filter_group.get_filters().forEach((filter) => {\n\t\t\t\tif (filter[0] == this.child_doctype) {\n\t\t\t\t\tfilters.push([filter[1], filter[2], filter[3]]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tasync get_child_result() {\n\t\tlet filters = [[\"parentfield\", \"=\", this.child_fieldname]];\n\n\t\tawait this.add_parent_filters(filters);\n\t\tthis.add_custom_child_filters(filters);\n\n\t\treturn frappe.call({\n\t\t\tmethod: \"frappe.client.get_list\",\n\t\t\targs: {\n\t\t\t\tdoctype: this.child_doctype,\n\t\t\t\tfilters: filters,\n\t\t\t\tfields: [\"name\", \"parent\", ...this.child_columns],\n\t\t\t\tparent: this.doctype,\n\t\t\t\tlimit_page_length: this.child_page_length + 5,\n\t\t\t\torder_by: \"parent\",\n\t\t\t},\n\t\t});\n\t}\n};"],
  "mappings": "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",
  "names": []
}
